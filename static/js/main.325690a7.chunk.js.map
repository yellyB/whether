{"version":3,"sources":["common/enType.tsx","common/utils.tsx","components/Chart.tsx","components/Present.tsx","components/Time.tsx","components/Loading.tsx","components/Footer.tsx","components/DataLoadFail.tsx","common/api.tsx","components/recommand/Recommand.tsx","components/recommand/Item.tsx","components/recommand/SiteList.tsx","components/recommand/Divider.tsx","components/recommand/RecommandContainer.tsx","App.tsx","index.tsx"],"names":["enResponse","enSKY","enPTY","enSkyState","strToNum","str","Math","round","Number","whetherState","value","sky","구름많음","흐림","pty","비","rainny1","비눈","눈","snowy","소나기","cloud","cloudy","rainny","snow","sun","weekOfDay","diff","Chart","props","values","useEffect","length","canvas","document","getElementById","getContext","ctx","lingrad","createLinearGradient","addColorStop","fillStyle","fillRect","background","canvas1","Image","sunny","rain","rain1","src","process","onload","x","y","abs","tmp","strokeStyle","lineWidth","beginPath","END_ANGLE","PI","date","newY","lineTo","arc","wState","drawImage","font","fillText","pop","fcstDate","valueTime","fcstTime","substring","dayDiff","moment","format","stroke","draw","className","id","width","height","Present","min","max","useState","skyState","setSkyState","alt","defaultProps","Time","setDate","time","now","Date","month","String","getFullYear","getMonth","getDate","day","val","result","getDayOfWeek","getDay","currentDate","theme","setTheme","clock","digit_to_name","split","digits","positions","digit_holder","getElementsByClassName","i","item","dots","createElement","setAttribute","appendChild","pos","span","append","weekday_names","weekday_holder","name","innerHTML","weekdays","update_time","h1","h2","m1","m2","s1","s2","dow","classList","remove","childNodes","setInterval","digitalClock","onClick","timerId","useRef","cnt","setCnt","temp","prev","current","clearInterval","Array","from","v","map","Footer","DataLoadFail","dummyLoad","getWhether","url","isDummy","a","data","Axios","get","then","response","console","log","status","resData","body","items","list","timeData","fcstValue","forEach","isBefore","push","category","_","find","TMN","TMX","catch","error","getCody","getItems","RecommandList","keys","setKey","setData","getNowCody","res","r","cody","useLayoutEffect","nowCody","splited","cloths","index","e","Item","number","idx","brand","itemNo","price","replace","SiteList","setItems","ceil","floor","random","Divider","RecommandContainer","key","Recommand","App","loading","setLoading","serviceKey","numOfRows","pageNo","dataType","base_date","base_time","nx","ny","params","corsError","proxy","datas","setDatas","nowValue","setNowValue","nowMin","setNowMin","nowMax","setNowMax","getData","undefined","finally","querySelector","innerText","Loading","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.325690a7.chunk.js","sourcesContent":["export enum enResponse {\r\n  POP = \"POP\", // 강수확률\r\n  PTY = \"PTY\", // 강수형태\r\n  PCP = \"PCP\", // 1시간 강수량\r\n  REH = \"REH\", // 습도\r\n  SNO = \"SNO\", // 1시간 신적설\r\n  SKY = \"SKY\", // 하늘상태\r\n  TMP = \"TMP\", // 1시간 기온\r\n  TMN = \"TMN\", // 일 최저기온\r\n  TMX = \"TMX\", // 일 최고기온\r\n  UUU = \"UUU\", // 풍속(동서성분)\r\n  VVV = \"VVV\", // 풍속(남북성분)\r\n  WAV = \"WAV\", // 파고\r\n  VEC = \"VEC\", // 풍향\r\n  WSD = \"WSD\", // 풍속\r\n}\r\n\r\nexport enum enSKY {\r\n  맑음 = 1,\r\n  구름많음 = 3,\r\n  흐림 = 4,\r\n}\r\n\r\nexport enum enPTY {\r\n  없음 = 0,\r\n  비 = 1,\r\n  비눈 = 2,\r\n  눈 = 3,\r\n  소나기 = 4,\r\n}\r\n\r\nexport enum enSkyState {\r\n  sun = \"sun\", // 해\r\n  sunny = \"sunny\", // 맑음\r\n  rain = \"rain\", // 우산\r\n  rain1 = \"rain1\", // 우산(투명우산)\r\n  rainny = \"rainny\", // 약한 비 + 구름\r\n  rainny1 = \"rainny1\", // 거센 비 + 구름\r\n  snow = \"snow\", // 눈\r\n  snowy = \"snowy\", // 눈 + 구름\r\n  cloud = \"cloud\", // 구름\r\n  cloudy = \"cloudy\", // 구름x2\r\n  wind = \"wind\", // 바람\r\n  windy = \"windy\", // 바람 + 구름\r\n  lightning = \"lightning\", // 번개 + 구름\r\n  lightning1 = \"lightning1\", // 번개 + 구름 + 비\r\n  moon = \"moon\", // 달\r\n  moony = \"moony\", // 달 + 구름\r\n}\r\n","import { enPTY, enSKY, enSkyState } from \"./enType\";\r\nimport { IFcst } from \"./interface\";\r\n\r\nexport const strToNum = (str: string) => {\r\n  return Math.round(Number(str));\r\n};\r\n\r\nexport const whetherState = (value: IFcst) => {\r\n  if (value.sky === enSKY.구름많음 || value.sky === enSKY.흐림) {\r\n    switch (value.pty) {\r\n      case enPTY.비:\r\n        return enSkyState.rainny1;\r\n      case enPTY.비눈:\r\n        return enSkyState.snowy;\r\n      case enPTY.눈:\r\n        return enSkyState.snowy;\r\n      case enPTY.소나기:\r\n        return enSkyState.rainny1;\r\n      default:\r\n        return value.sky === enSKY.구름많음\r\n          ? enSkyState.cloud\r\n          : enSkyState.cloudy;\r\n    }\r\n  } else {\r\n    switch (value.pty) {\r\n      case enPTY.비:\r\n        return enSkyState.rainny;\r\n      case enPTY.비눈:\r\n        return enSkyState.snow;\r\n      case enPTY.눈:\r\n        return enSkyState.snow;\r\n      case enPTY.소나기:\r\n        return enSkyState.rainny;\r\n      default:\r\n        return enSkyState.sun;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getRandomInt = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min; //최댓값은 제외, 최솟값은 포함\r\n};\r\n\r\n// 천단위 콤마\r\nexport const numberWithComma = (number: number) => {\r\n  const numWithComma = String(number).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  return numWithComma;\r\n};\r\n\r\nexport const weekOfDay = (diff: number) => {\r\n  switch (diff) {\r\n    case 1:\r\n      return \"내일\";\r\n    case 2:\r\n      return \"모레\";\r\n    case 3:\r\n      return \"글피\";\r\n    default:\r\n      return \"지금\";\r\n  }\r\n};\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { IFcst } from \"../common/interface\";\r\nimport moment from \"moment\";\r\nimport { weekOfDay, whetherState } from \"../common/utils\";\r\nimport { enSkyState } from \"../common/enType\";\r\n\r\nconst Chart = (props: { values: IFcst[] }) => {\r\n  const { values } = props;\r\n\r\n  const CART_WIDTH = 3800;\r\n  const CART_HEIGHT = 250;\r\n\r\n  /**\r\n  TODO\r\n  1. useRef써서 요소 \r\n  **/\r\n  const draw = () => {\r\n    const canvas = document.getElementById(\"chart\");\r\n    const canvas1 = document.getElementById(\"chart\");\r\n\r\n    if (canvas.getContext) {\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const ctx1 = canvas1.getContext(\"2d\");\r\n\r\n      const sun = new Image();\r\n      const sunny = new Image();\r\n      const rain = new Image();\r\n      const rain1 = new Image();\r\n      const rainny = new Image();\r\n      const rainny1 = new Image();\r\n      const snow = new Image();\r\n      const snowy = new Image();\r\n      const cloud = new Image();\r\n      const cloudy = new Image();\r\n\r\n      sun.src = process.env.PUBLIC_URL + \"/images/whether/sun.png\";\r\n      sunny.src = process.env.PUBLIC_URL + \"/images/whether/sunny.png\";\r\n      rain.src = process.env.PUBLIC_URL + \"/images/whether/rain.png\";\r\n      rain1.src = process.env.PUBLIC_URL + \"/images/whether/rain1.png\";\r\n      rainny.src = process.env.PUBLIC_URL + \"/images/whether/rainny.png\";\r\n      rainny1.src = process.env.PUBLIC_URL + \"/images/whether/rainny1.png\";\r\n      snow.src = process.env.PUBLIC_URL + \"/images/whether/snow.png\";\r\n      snowy.src = process.env.PUBLIC_URL + \"/images/whether/snowy.png\";\r\n      cloud.src = process.env.PUBLIC_URL + \"/images/whether/cloud.png\";\r\n      cloudy.src = process.env.PUBLIC_URL + \"/images/whether/cloudy.png\";\r\n\r\n      const imgWidth = 20;\r\n      const imgHeight = 20;\r\n\r\n      cloudy.onload = () => {\r\n        let x = 0;\r\n        let y = 80; // y좌표의 중간 지점 = 120. 첫 위치는 하단에 텍스트 고려해서 조금 높게 설정\r\n        const LARGER = 4; // y좌표를 1씩 증감하면 너무 차이가 적기 때문에 증폭시키기 위한 계수\r\n        y = y + Math.abs(values[0].tmp) * LARGER; // 맨 처음값을 y에 두기 위한 계산\r\n        const FIXED_Y = 220;\r\n        const X_DIFF = 50;\r\n\r\n        ctx.strokeStyle = \"pink\";\r\n        ctx.lineWidth = 3;\r\n\r\n        ctx.beginPath();\r\n\r\n        const RADIUS = 3; // 반지름\r\n        const START_ANGLE = 0; // 원의 시작위치\r\n        const END_ANGLE = Math.PI + (Math.PI * 2) / 2; // 원의 끝위치\r\n        const ANTI_CLOCKWISE = true; // 시계방향/반시계방향\r\n\r\n        let date = \"\";\r\n\r\n        for (const value of values) {\r\n          x = x + X_DIFF;\r\n          const newY = y - value.tmp * LARGER;\r\n\r\n          // 시간별 좌표 원\r\n          ctx.lineTo(x, newY);\r\n          ctx.arc(x, newY, RADIUS, START_ANGLE, END_ANGLE, ANTI_CLOCKWISE);\r\n\r\n          const wState = whetherState(value);\r\n          // 날씨 상태 이미지\r\n          ctx.drawImage(\r\n            wState === enSkyState.sun\r\n              ? sun\r\n              : wState === enSkyState.rainny\r\n              ? rainny\r\n              : wState === enSkyState.rainny1\r\n              ? rainny1\r\n              : wState === enSkyState.snow\r\n              ? snow\r\n              : wState === enSkyState.snowy\r\n              ? snowy\r\n              : wState === enSkyState.cloud\r\n              ? cloud\r\n              : wState === enSkyState.cloudy\r\n              ? cloudy\r\n              : \"\",\r\n            x - 10,\r\n            newY - 50,\r\n            imgWidth,\r\n            imgHeight\r\n          );\r\n\r\n          ctx.font = \"14px nexonGothic_Bold\";\r\n          ctx.fillStyle = \"red\";\r\n          ctx.fillText(value.tmp + \"˚\", x - 10, newY - 10); // 기온\r\n\r\n          ctx.font = \"10px nexonGothic\";\r\n          ctx.fillStyle = value.pop >= 60 ? \"skyblue\" : \"gray\";\r\n          ctx.fillText(value.pop + \"%\", x - 5, newY + 25); // 강수확률\r\n\r\n          if (date !== value.fcstDate) {\r\n            date = value.fcstDate;\r\n            // ctx.font = \"18px nexonGothic\";\r\n            // ctx.fillStyle = \"purple\";\r\n            // ctx.fillText(value.fcstDate.substring(4, 8), x - 10, FIXED_Y); // 날짜\r\n            const dayDiff = moment(value.fcstDate).diff(\r\n              moment().format(\"YYYYMMDD\"),\r\n              \"days\"\r\n            );\r\n\r\n            ctx.font = \"12px nexonGothic_Bold\";\r\n            ctx.fillStyle = \"black\";\r\n            ctx.fillText(weekOfDay(dayDiff), x - 10, FIXED_Y); // 날짜로 내일,모레..출력\r\n            continue;\r\n          }\r\n          ctx.font = \"12px nexonGothic\";\r\n          ctx.fillStyle = \"darkgray\";\r\n          let valueTime = value.fcstTime.substring(0, 2) + \"시\";\r\n          ctx.fillText(valueTime, x - 10, FIXED_Y); // 시간\r\n        }\r\n        ctx.stroke();\r\n      };\r\n    }\r\n  };\r\n\r\n  const background = () => {\r\n    const canvas = document.getElementById(\"chart\");\r\n    if (canvas.getContext) {\r\n      const ctx = canvas.getContext(\"2d\");\r\n      // 그레이디언트를 생성한다\r\n      var lingrad = ctx.createLinearGradient(0, 0, 0, CART_HEIGHT);\r\n      lingrad.addColorStop(0, \"rgb(243 205 194 / 10%)\");\r\n      lingrad.addColorStop(0.4, \"white\");\r\n      lingrad.addColorStop(0.6, \"white\");\r\n      lingrad.addColorStop(1, \"rgb(202 229 239 / 10%)\");\r\n\r\n      // 외곽선과 채움 스타일에 그레이디언트를 적용한다\r\n      ctx.fillStyle = lingrad;\r\n\r\n      // 도형을 그린다\r\n      ctx.fillRect(0, 0, CART_WIDTH, CART_HEIGHT);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (values.length > 0) {\r\n      background();\r\n      draw();\r\n    }\r\n  }, [values]);\r\n\r\n  return (\r\n    <div className=\"chart_wrapper\">\r\n      <canvas\r\n        id=\"chart\"\r\n        className=\"chart\"\r\n        width={CART_WIDTH - values.length * 5}\r\n        height={CART_HEIGHT}\r\n      ></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { enSkyState } from \"../common/enType\";\r\nimport { IFcst } from \"../common/interface\";\r\nimport { whetherState } from \"../common/utils\";\r\n\r\nconst Present = (props: { value: IFcst; min: number; max: number }) => {\r\n  const { value, min, max } = props;\r\n\r\n  const [skyState, setSkyState] = useState<enSkyState>(enSkyState.sun);\r\n\r\n  useEffect(() => {\r\n    setSkyState(whetherState(value));\r\n  }, [value]);\r\n\r\n  return (\r\n    <div className=\"present_wrapper\">\r\n      <img\r\n        alt=\"sunny\"\r\n        src={process.env.PUBLIC_URL + \"/images/whether/\" + skyState + \".png\"}\r\n        className=\"present_whether_img\"\r\n      />\r\n      <div className=\"present_text\">\r\n        <div className=\"present_current_text\">{value.tmp}℃</div>\r\n        <div className=\"present_other_text\">\r\n          {min}˚/ {max}˚\r\n          <br />\r\n          <img\r\n            alt=\"rainPer\"\r\n            src={process.env.PUBLIC_URL + \"/images/whether/rainPer.png\"}\r\n            className=\"present_rainPer_img\"\r\n          />\r\n          {value.pop}%\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Present;\r\n\r\nPresent.defaultProps = {\r\n  value: { fcstDate: \"\", fcstTime: \"\", tmp: 0, pop: 0, pty: 0, sky: 1 },\r\n  min: 0,\r\n  max: 0,\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"../style/clock.css\";\r\n\r\nconst Time = () => {\r\n  // const timerId = useRef(null);\r\n\r\n  const [date, setDate] = useState(\"0000년 00월 00일\");\r\n  const [time, setTime] = useState(\"00:00:00\");\r\n\r\n  const getDayOfWeek = (val) => {\r\n    let result = \"\";\r\n    switch (val) {\r\n      case 0:\r\n        result = \"일\";\r\n        break;\r\n      case 1:\r\n        result = \"월\";\r\n        break;\r\n      case 2:\r\n        result = \"화\";\r\n        break;\r\n      case 3:\r\n        result = \"수\";\r\n        break;\r\n      case 4:\r\n        result = \"목\";\r\n        break;\r\n      case 5:\r\n        result = \"금\";\r\n        break;\r\n      case 6:\r\n        result = \"토\";\r\n        break;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const currentDate = () => {\r\n    const now = new Date();\r\n    const year = String(now.getFullYear());\r\n    const month = String(now.getMonth());\r\n    const date = String(now.getDate());\r\n    const day = getDayOfWeek(now.getDay());\r\n    setDate(`${month}월 ${date}일 ${day}요일`);\r\n  };\r\n\r\n  const currentTime = () => {\r\n    const now = new Date();\r\n    const hours = String(now.getHours()).padStart(2, \"0\");\r\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\r\n    setTime(`${hours}:${minutes}:${seconds}`);\r\n  };\r\n\r\n  const startTimer = () => {\r\n    setInterval(currentTime, 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    currentDate();\r\n    // startTimer();\r\n  }, []);\r\n\r\n  const [theme, setTheme] = useState<string>(\"dark\");\r\n\r\n  const handleChangeThemeOnClick = () => {\r\n    setTheme(theme === \"dark\" ? \"light\" : \"dark\");\r\n  };\r\n\r\n  /**\r\n   TODO\r\n   1. 리액트에 최적화하기\r\n   2. digitalClock 함수의 setTimeout을 setInterval로\r\n   3. useEffect에 리턴문 작성해서 언마운트시 함수 해제하기\r\n   **/\r\n  const digitalClock = () => {\r\n    const clock = document.getElementById(\"clock\");\r\n\r\n    // 시간\r\n    const digit_to_name =\r\n      \"zero one two three four five six seven eight nine\".split(\" \");\r\n\r\n    const digits = {};\r\n    const positions = [\"h1\", \"h2\", \":\", \"m1\", \"m2\", \":\", \"s1\", \"s2\"];\r\n\r\n    // 숫자별 마크업 생성\r\n    const digit_holder = clock.getElementsByClassName(\"digits\")[0];\r\n\r\n    for (const i in positions) {\r\n      const item = positions[i];\r\n      if (item === \":\") {\r\n        const dots = document.createElement(\"div\");\r\n        dots.setAttribute(\"class\", \"dots\");\r\n        digit_holder.appendChild(dots);\r\n      } else {\r\n        const pos = document.createElement(\"div\");\r\n        for (let i = 1; i < 8; i++) {\r\n          const span = document.createElement(\"span\");\r\n          span.setAttribute(\"class\", \"d\" + i);\r\n          pos.appendChild(span);\r\n        }\r\n        // digits 에  key:value 형식으로\r\n        digits[item] = pos;\r\n        // digit 엘리먼트를 페이지에 추가\r\n        digit_holder.append(pos);\r\n      }\r\n    }\r\n\r\n    // 요일\r\n    const weekday_names = \"MON TUE WED THU FRI SAT SUN\".split(\" \");\r\n\r\n    const weekday_holder = clock.getElementsByClassName(\"weekdays\")[0];\r\n\r\n    for (const name of weekday_names) {\r\n      const span = document.createElement(\"span\");\r\n      span.innerHTML = name;\r\n      weekday_holder.appendChild(span);\r\n    }\r\n\r\n    const weekdays = clock.getElementsByClassName(\"weekdays\")[0];\r\n\r\n    // 매 초마다 타이머 돌려서 시계 갱신\r\n    (function update_time() {\r\n      const now = moment().format(\"HHmmssdA\");\r\n\r\n      digits.h1.setAttribute(\"class\", digit_to_name[now[0]]);\r\n      digits.h2.setAttribute(\"class\", digit_to_name[now[1]]);\r\n      digits.m1.setAttribute(\"class\", digit_to_name[now[2]]);\r\n      digits.m2.setAttribute(\"class\", digit_to_name[now[3]]);\r\n      digits.s1.setAttribute(\"class\", digit_to_name[now[4]]);\r\n      digits.s2.setAttribute(\"class\", digit_to_name[now[5]]);\r\n\r\n      let dow = now[6];\r\n      dow--;\r\n\r\n      if (dow < 0) {\r\n        // 일요일 제일 마지막으로\r\n        dow = 6;\r\n      }\r\n\r\n      // 일주일중 오늘 요일 active\r\n      weekdays.classList.remove(\"active\");\r\n      const nowDay = weekdays.childNodes[dow];\r\n      nowDay.setAttribute(\"class\", \"active\");\r\n\r\n      // 1초마다\r\n      setInterval(update_time, 1000);\r\n    })();\r\n  };\r\n\r\n  useEffect(() => {\r\n    digitalClock();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"time_wrapper\">\r\n        <div id=\"clock\" className={theme}>\r\n          <div className=\"display\">\r\n            <div className=\"weekdays\"></div>\r\n            <div className=\"ampm\"></div>\r\n            <div className=\"digits\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"time_date\">{date}</div>\r\n        <div>\r\n          <button className=\"time_theme_btn\" onClick={handleChangeThemeOnClick}>\r\n            {\"모드 변경\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"time_wrapper\">\r\n        <span className=\"time_nowTime_time\">{time}</span>\r\n        <br />\r\n        <span className=\"time_nowTime_date\">{date}</span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Time;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst Present = () => {\r\n  const timerId = useRef(null);\r\n\r\n  const [cnt, setCnt] = useState<number>(1);\r\n\r\n  const temp = () => {\r\n    setCnt((prev) => {\r\n      if (prev < 3) return prev + 1;\r\n      else return 0;\r\n    });\r\n  };\r\n\r\n  const startTimer = () => {\r\n    setInterval(temp, 500);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // startTimer();\r\n\r\n    timerId.current = setInterval(temp, 500);\r\n    return () => clearInterval(timerId.current);\r\n    // return () => {\r\n    //   // clearInterval(startTimer)\r\n    // };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app_loading\">\r\n      <div className=\"app_loading_imgs\">\r\n        {Array.from({ length: cnt }, (v, i) => i).map((i: number) => (\r\n          <img\r\n            alt=\"loading\"\r\n            src={process.env.PUBLIC_URL + \"/images/icon/loading\" + i + \".png\"}\r\n            className=\"loading_img\"\r\n            key={i}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Present;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return <div className=\"footer\">날씨의 참견 by.yellyB</div>;\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst DataLoadFail = (props: { dummyLoad: Function }) => {\r\n  const { dummyLoad } = props;\r\n\r\n  return (\r\n    <div className=\"dataLoadFail\">\r\n      서버와의 통신 문제로 데이터 로드에 실패했습니다.\r\n      <br /> 잠시 후 다시 시도 바랍니다.\r\n      <br />\r\n      <br />\r\n      <button onClick={() => dummyLoad()}>임시 데이터로 보기 {\"->\"}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataLoadFail;\r\n","import Axios from \"axios\";\r\nimport { enResponse } from \"./enType\";\r\nimport { IFcst, IFcstData } from \"./interface\";\r\nimport _ from \"lodash\";\r\nimport { strToNum } from \"./utils\";\r\nimport moment from \"moment\";\r\n\r\nexport const getWhether = async (url: string, isDummy: boolean) => {\r\n  let result: any = {\r\n    data: [],\r\n    min: 0,\r\n    max: 0,\r\n  };\r\n\r\n  await Axios.get(url)\r\n    .then(async (response) => {\r\n      console.log(response.data[0] === \"<\" ? \"실패\" : \"성공\");\r\n      if (response.data[0] === \"<\") {\r\n        return result;\r\n      }\r\n      if (response.status === 200) {\r\n        const resData: IFcstData[] = response.data.response.body.items.item;\r\n        const list = [];\r\n\r\n        const timeData = {\r\n          fcstDate: isDummy ? moment().format(\"YYYYMMDD\") : resData[0].fcstDate, // 더미 데이터면 오늘날짜로 바꿔줌\r\n          fcstTime: resData[0].fcstTime,\r\n          tmp: Number(resData[0].fcstValue),\r\n          pop: 0,\r\n          pty: 0,\r\n          sky: 0,\r\n        };\r\n\r\n        resData.forEach((item) => {\r\n          // 현재시각 이후만 저장하기\r\n          if (\r\n            isDummy ||\r\n            moment().isBefore(\r\n              moment(item.fcstDate + \" \" + item.fcstTime.substring(0, 2) + \"59\")\r\n            )\r\n          ) {\r\n            if (timeData.fcstTime !== item.fcstTime) {\r\n              timeData.fcstDate = isDummy\r\n                ? moment().format(\"YYYYMMDD\")\r\n                : item.fcstDate;\r\n              timeData.fcstTime = item.fcstTime;\r\n              timeData.tmp = Number(item.fcstValue);\r\n              list.push({ ...timeData });\r\n            } else {\r\n              if (item.category === \"POP\")\r\n                timeData.pop = Number(item.fcstValue);\r\n              else if (item.category === \"PTY\")\r\n                timeData.pty = Number(item.fcstValue);\r\n              else if (item.category === \"SKY\")\r\n                timeData.sky = Number(item.fcstValue);\r\n            }\r\n          }\r\n        });\r\n\r\n        list.push({ ...timeData });\r\n\r\n        //오늘 최저\r\n        const min = await _.find(resData, (item: IFcstData) => {\r\n          return item.category === enResponse.TMN;\r\n        });\r\n\r\n        //오늘 최고\r\n        const max = await _.find(resData, (item: IFcstData) => {\r\n          return item.category === enResponse.TMX;\r\n        });\r\n\r\n        result.min = strToNum(min.fcstValue);\r\n        result.max = strToNum(max.fcstValue);\r\n        result.data = list;\r\n      } else {\r\n        console.log(\"response error\");\r\n      }\r\n    })\r\n    .catch((error) => console.log(\"error:\", error));\r\n  return result;\r\n};\r\n\r\nexport const getCody = async () => {\r\n  let result = [];\r\n  await Axios.get(process.env.PUBLIC_URL + \"/datas/cody.json\")\r\n    .then((response) => {\r\n      result = response.data;\r\n    })\r\n    .catch((error) => console.log(\"error:\", error));\r\n  return result;\r\n};\r\n\r\nexport const getItems = async () => {\r\n  let result = [];\r\n  await Axios.get(process.env.PUBLIC_URL + \"/datas/items.json\")\r\n    .then((response) => {\r\n      result = response.data;\r\n    })\r\n    .catch((error) => console.log(\"error:\", error));\r\n  return result;\r\n};\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { ICody, IFcst } from \"../../common/interface\";\r\nimport { getCody } from \"../../common/api\";\r\n\r\nconst RecommandList = (props: {\r\n  value: IFcst;\r\n  keys: string;\r\n  setKey: Function;\r\n}) => {\r\n  const { value, keys, setKey } = props;\r\n\r\n  const [data, setData] = useState<string[]>([]);\r\n\r\n  const getData = () => {\r\n    return getCody().then((response) => {\r\n      return response;\r\n    });\r\n  };\r\n\r\n  const getNowCody = async () => {\r\n    let cody;\r\n    await getData()\r\n      .then((res) => {\r\n        for (const r of res) {\r\n          if (value.tmp >= r.value) {\r\n            cody = r;\r\n            return;\r\n          }\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\"error from component [Recommand]\");\r\n      });\r\n    return cody;\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    getNowCody().then((nowCody) => {\r\n      if (nowCody) {\r\n        const splited = nowCody.cloths.split(\",\");\r\n        setData(splited);\r\n        setKey(splited[0]);\r\n      }\r\n    });\r\n  }, [value]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"recommand_flex_wrapper\">\r\n        {data.map((item: string, index: number) => (\r\n          <div\r\n            className={\r\n              keys === item\r\n                ? \"recommand_flex_item recommand_flex_item_selected\"\r\n                : \"recommand_flex_item\"\r\n            }\r\n            key={item}\r\n            onClick={(e) => setKey(item)}\r\n          >\r\n            {item}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecommandList;\r\n","import React from \"react\";\r\nimport { IItem } from \"../../common/interface\";\r\nimport { numberWithComma } from \"../../common/utils\";\r\n\r\nconst Item = (props: { data: IItem }) => {\r\n  const { data } = props;\r\n\r\n  return (\r\n    <div className=\"siteList_items\">\r\n      <div className=\"item_flex-container\">\r\n        <img\r\n          className=\"item_img\"\r\n          alt=\"img\"\r\n          src={process.env.PUBLIC_URL + \"/images/items/\" + data.idx + \".jpg\"}\r\n        />\r\n      </div>\r\n      <div className=\"item_flex-container\">\r\n        <span className=\"item_font1\">{data.name}</span>\r\n        <br />\r\n        <span className=\"item_font2\">\r\n          {data.brand} [{data.itemNo}]\r\n        </span>\r\n        <br />\r\n        <span className=\"item_font3\">{numberWithComma(data.price)}</span>\r\n        <br />\r\n        <span className=\"item_font4\">구매하러 가기 {\">\"} </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getItems } from \"../../common/api\";\r\nimport { IItem } from \"../../common/interface\";\r\nimport { getRandomInt } from \"../../common/utils\";\r\nimport Item from \"./Item\";\r\n\r\nconst getData = () => {\r\n  return getItems().then((response) => {\r\n    return response;\r\n  });\r\n};\r\n\r\nconst SiteList = () => {\r\n  const [items, setItems] = useState<IItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    getData()\r\n      .then((res) => {\r\n        setItems(res);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"error from component [SiteList]\");\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"siteList_wrapper\">\r\n      {items.length > 0 &&\r\n        Array.from({ length: 4 }, (v, i) => i).map((i: number) => (\r\n          <Item data={items[getRandomInt(i * 10, (i + 1) * 10)]} key={i} />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SiteList;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Divider = () => {\r\n  return (\r\n    <div className=\"divider_wrapper\">\r\n      <div className=\"divider\" />\r\n      <div className=\"recommand_text\">추천 아이템</div>\r\n      <div className=\"divider\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Divider;\r\n","import React, { useState } from \"react\";\r\nimport { IFcst } from \"../../common/interface\";\r\nimport RecommandList from \"./Recommand\";\r\nimport SiteList from \"./SiteList\";\r\nimport Divider from \"./Divider\";\r\n\r\nconst RecommandContainer = (props: { value: IFcst }) => {\r\n  const [key, setKey] = useState<string>(\"\");\r\n\r\n  return (\r\n    <div className=\"recommand_container\">\r\n      <Divider />\r\n      <div className=\"recommand_n_site\">\r\n        <RecommandList\r\n          value={props.value}\r\n          keys={key}\r\n          setKey={(val) => {\r\n            setKey(val);\r\n          }}\r\n        />\r\n        <SiteList key={key} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecommandContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./style/style.css\";\r\nimport { IFcst, IRequestParams } from \"./common/interface\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Chart,\r\n  Loading,\r\n  Present,\r\n  Time,\r\n  Footer,\r\n  DataLoadFail,\r\n} from \"./components\";\r\nimport { getWhether } from \"./common/api\";\r\nimport _ from \"lodash\";\r\nimport { RecommandContainer } from \"./components/recommand\";\r\n\r\nconst App = () => {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  const [params] = useState<IRequestParams>({\r\n    serviceKey: process.env.REACT_APP_API_KEY,\r\n    numOfRows: 1000,\r\n    pageNo: 1,\r\n    dataType: \"JSON\",\r\n    base_date: moment().format(\"YYYYMMDD\"),\r\n    base_time: \"0200\",\r\n    nx: 55,\r\n    ny: 127,\r\n  });\r\n\r\n  const [corsError] = useState<string>(\r\n    \"https://yelly-cors-anywhere.herokuapp.com/\"\r\n  );\r\n  const [proxy] = useState<string>(\"http://apis.data.go.kr\");\r\n\r\n  const [datas, setDatas] = useState<IFcst[]>([]);\r\n  const [nowValue, setNowValue] = useState<IFcst>({} as any);\r\n  const [nowMin, setNowMin] = useState<number>(0);\r\n  const [nowMax, setNowMax] = useState<number>(0);\r\n\r\n  const getData = async (url: string, isDummy: boolean) => {\r\n    let res;\r\n    await getWhether(url, isDummy).then((response) => {\r\n      res = response;\r\n    });\r\n    return res;\r\n  };\r\n\r\n  const handleDummyLoadOnClick = () => {\r\n    getData(process.env.PUBLIC_URL + \"/datas/dummy.json\", true).then(\r\n      (response) => {\r\n        setDatas(response.data);\r\n        setNowValue(response.data !== undefined && response.data[0]);\r\n        setNowMin(response.min);\r\n        setNowMax(response.max);\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const url = `/1360000/VilageFcstInfoService_2.0/getVilageFcst?serviceKey=${params.serviceKey}&pageNo=1&numOfRows=${params.numOfRows}&dataType=${params.dataType}&base_date=${params.base_date}&base_time=${params.base_time}&nx=${params.nx}&ny=${params.ny}`;\r\n    getData(corsError + proxy + url, false)\r\n      .then((response) => {\r\n        setDatas(response.data);\r\n        setNowValue(response.data !== undefined && response.data[0]);\r\n        setNowMin(response.min);\r\n        setNowMax(response.max);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n\r\n    // 타이틀 변경\r\n    const htmlTitle = document.querySelector(\"title\");\r\n    htmlTitle.innerText = \"날씨의 참견\";\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app_wrapper\">\r\n      {loading && <Loading />}\r\n      {datas.length > 0 || loading ? (\r\n        <div className=\"app_content\">\r\n          <div className=\"upper_part\">\r\n            <div className=\"time_n_present_wrapper\">\r\n              <Time />\r\n              <Present value={nowValue} min={nowMin} max={nowMax} />\r\n            </div>\r\n            <Chart values={datas} />\r\n          </div>\r\n          <RecommandContainer value={nowValue} />\r\n        </div>\r\n      ) : (\r\n        <DataLoadFail dummyLoad={handleDummyLoadOnClick} />\r\n      )}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport axios from \"axios\";\r\n\r\n// axios.defaults.baseURL = \"http://apis.data.go.kr\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}